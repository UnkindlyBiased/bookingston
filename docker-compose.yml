services:
  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    ports:
      - 4001:3000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build: 
      context: ./client
      dockerfile: Dockerfile
    ports:
      - 4002:3001
    depends_on:
      - backend

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PW}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /var/lib/postgresql/data
      PGPORT: 4003
    ports:
      - 4003:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis/redis-stack
    container_name: redis
    restart: always
    environment:
      - REDIS_ARGS=--appendonly yes
    ports:
      - 4004:6379
      - 8001:8001
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  redisdata:
